{"version":3,"sources":["components/Form/Form.tsx","components/UserInfo/UserInfo.tsx","api/users.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["Form","addTodo","useState","input","select","touched","setTouched","id","title","completed","userId","todoInfo","setTodoInfo","handleSubmit","event","preventDefault","action","method","onSubmit","e","className","type","placeholder","value","onChange","target","onBlur","UserInfo","user","href","email","name","username","TodoInfo","todo","users","find","person","classNames","TodoList","todoList","map","elem","App","todos","setTodoList","newTodo","prevTodoList","list","Math","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d54d0eb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Todo } from '../TodoInfo';\n\ninterface Props{\n  addTodo: (todo: Todo) => void\n}\n\nexport const Form: React.FC<Props> = ({ addTodo }) => {\n  const [touched, setTouched] = useState({\n    input: false,\n    select: false,\n  });\n  const [todoInfo, setTodoInfo] = useState({\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n  });\n\n  const reset = () => {\n    setTouched({\n      input: false,\n      select: false,\n    });\n    setTodoInfo({\n      id: 0,\n      title: '',\n      completed: false,\n      userId: 0,\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!todoInfo.title || todoInfo.userId === 0) {\n      return;\n    }\n\n    addTodo(todoInfo);\n    reset();\n  };\n\n  return (\n\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={(e) => handleSubmit(e)}\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={todoInfo.title}\n          onChange={(e) => setTodoInfo({ ...todoInfo, title: e.target.value })}\n          onBlur={() => setTouched({ ...touched, input: true })}\n\n        />\n        {touched.input && !todoInfo.title && (\n          <span className=\"error\">Please enter a title</span>)}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={todoInfo.userId}\n          onChange={(e) => {\n            setTodoInfo({ ...todoInfo, userId: +e.target.value });\n          }}\n          onBlur={() => {\n            setTouched({ ...touched, select: true });\n          }}\n        >\n          <option value=\"0\">Choose a user</option>\n          <option value=\"1\">Leanne Graham</option>\n          <option value=\"2\">Ervin Howell</option>\n          <option value=\"3\">Clementine Bauch</option>\n          <option value=\"4\">Patricia Lebsack</option>\n          <option value=\"5\">Chelsey Dietrich</option>\n          <option value=\"6\">Mrs. Dennis Schulist</option>\n          <option value=\"7\">Kurtis Weissnat</option>\n          <option value=\"8\">Nicholas Runolfsdottir V</option>\n          <option value=\"9\">Glenna Reichert</option>\n          <option value=\"10\">Clementina DuBuque</option>\n        </select>\n\n        {touched.select && todoInfo.userId === 0\n          && (<span className=\"error\">Please choose a user</span>)}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","interface User{\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\ninterface UserInfoProps {\n  user: User,\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport users from '../../api/users';\n\nexport interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n}\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({\n  todo: {\n    id,\n    completed,\n    userId,\n    title,\n  },\n}) => {\n  const user = users.find(person => person.id === userId);\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo, TodoInfo } from '../TodoInfo';\n\ninterface TodoProps {\n  todoList: Todo[],\n}\n\nexport const TodoList: React.FC<TodoProps> = ({ todoList }) => {\n  return (\n    <section className=\"TodoList\">\n      {todoList.map(elem => (\n        <TodoInfo todo={elem} key={elem.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { Form } from './components/Form/Form';\nimport { TodoList } from './components/TodoList';\nimport todos from './api/todos';\nimport { Todo } from './components/TodoInfo';\n\n// import usersFromServer from './api/users';\n// import todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [todoList, setTodoList] = useState(todos);\n\n  function createNewTodoId(list: Todo[]) {\n    const maxId = Math.max(...list.map((todo) => todo.id));\n\n    return maxId + 1;\n  }\n\n  const addTodo = (newTodo: Todo): void => {\n    setTodoList(prevTodoList => [\n      ...prevTodoList,\n      { ...newTodo, id: createNewTodoId(prevTodoList) },\n    ]);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <Form addTodo={addTodo} />\n      <TodoList todoList={todoList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}